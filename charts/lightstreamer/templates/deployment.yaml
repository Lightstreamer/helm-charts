apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lightstreamer.fullname" . }}
  labels:
    {{- include "lightstreamer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lightstreamer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lightstreamer.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lightstreamer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $key, $value := .Values.servers }}
          {{- if $value.enabled }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: TCP
          {{- end }}
          {{- end }}
          {{- with .Values.management.jmx.rmiConnector.port}}
            - name: jmx-port
              containerPort: {{ .value }}
              protocol: TCP
          {{- end}}
          {{- with .Values.management.jmx.rmiConnector.dataPort}}
            - name: jmxDataPort
              containerPort: {{ .value }}
              protocol: TCP
          {{- end}}
          {{- if ((.Values.probes).liveness).enabled}}
            {{- with .Values.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /lightstreamer/healthcheck
              {{- $serverRef := required "probes.liveness.serverRef must be set" .serverRef }}
              {{- $server := required (printf "servers.%s not defined" $serverRef) (get $.Values.servers $serverRef) }}
              port: {{ $serverRef }}
              scheme: {{ $server.enableHttps | default false | ternary "HTTPS" "HTTP" }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold:  {{ .failureThreshold }}
            timeoutSeconds: {{ .timeoutSeconds }}
            terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
            {{- end }}
          {{- else }}
          livenessProbe:
             {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if ((.Values.probes).readiness).enabled}}
            {{- with .Values.probes.readiness }}  
          readinessProbe:
            httpGet:
              path: /lightstreamer/healthcheck
              {{- $serverRef := required "probes.readiness.serverRef must be set" .serverRef }}
              {{- $server := required (printf "servers.%s not defined" $serverRef) (get $.Values.servers $serverRef) }}
              port: {{ $serverRef }}
              scheme: {{ $server.enableHttps | default false | ternary "HTTPS" "HTTP" }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold:  {{ .failureThreshold }}
            timeoutSeconds: {{ .timeoutSeconds }}
            {{- end }}
          {{- else}}
          readinessProbe:
             {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.keyStores }}
            - name: KEYSTORE_{{ $key | upper }}_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required (printf "keyStores.%s.keystorePasswordSecretRef.name must be set" $key) ($value.keystorePasswordSecretRef).name }}
                  key: {{ required (printf "keyStores.%s.keystorePasswordSecretRef.key must be set" $key) ($value.keystorePasswordSecretRef).key }}
          {{- end }}
          {{- with .Values.license.enterprise.onlinePasswordSecretRef }}
            - name: ENTERPRISE_LICENSE_{{ .key | upper | replace "-" "_" }}
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .key }}
          {{- end}}
          volumeMounts:
            - name: config
              mountPath: /lightstreamer/conf
          {{- with .Values.errorPageRef }}
            - name: error-page
              mountPath: /lightstreamer/conf/error-page
          {{- end }}
          {{- with .Values.license.enterprise.filePathSecretRef }}
            - name: enterprise-license
              mountPath: /lightstreamer/conf/enterprise-license/
          {{- end}}
          {{- range $key, $value := .Values.keyStores }}
            - name: keystore-{{ $key | lower }}
              mountPath: /lightstreamer/conf/keystores/{{ $key }}
      {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "lightstreamer.name" . }}-configmap
      {{- with .Values.errorPageRef }}
        - name: error-page
          configMap:
            name: {{ .name }}
      {{- end }}
      {{- range $key, $value := .Values.keyStores }}
        - name: keystore-{{ $key | lower }}
          secret:
            secretName: {{ required (printf "keystores.%s.keystoreFileSecretRef.name must be set" $key) (($value.keystoreFileSecretRef).name) }}
      {{- end }}
      {{- with .Values.license.enterprise.filePathSecretRef }}
        - name: enterprise-license
          secret:
            secretName: {{ .name }}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
